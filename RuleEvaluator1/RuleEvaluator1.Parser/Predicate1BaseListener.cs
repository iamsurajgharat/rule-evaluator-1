//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Code\Personal\rule-evaluator-1\RuleEvaluator1\RuleEvaluator1.Parser\Grammars\Predicate1.g4 by ANTLR 4.9

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace RuleEvaluator1.Parser {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IPredicate1Listener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class Predicate1BaseListener : IPredicate1Listener {
	/// <summary>
	/// Enter a parse tree produced by the <c>Pexpr_Negation</c>
	/// labeled alternative in <see cref="Predicate1Parser.pexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPexpr_Negation([NotNull] Predicate1Parser.Pexpr_NegationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Pexpr_Negation</c>
	/// labeled alternative in <see cref="Predicate1Parser.pexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPexpr_Negation([NotNull] Predicate1Parser.Pexpr_NegationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Pexpr_Poperator</c>
	/// labeled alternative in <see cref="Predicate1Parser.pexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPexpr_Poperator([NotNull] Predicate1Parser.Pexpr_PoperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Pexpr_Poperator</c>
	/// labeled alternative in <see cref="Predicate1Parser.pexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPexpr_Poperator([NotNull] Predicate1Parser.Pexpr_PoperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Pexpr_Pfunction</c>
	/// labeled alternative in <see cref="Predicate1Parser.pexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPexpr_Pfunction([NotNull] Predicate1Parser.Pexpr_PfunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Pexpr_Pfunction</c>
	/// labeled alternative in <see cref="Predicate1Parser.pexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPexpr_Pfunction([NotNull] Predicate1Parser.Pexpr_PfunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Pexpr_Id</c>
	/// labeled alternative in <see cref="Predicate1Parser.pexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPexpr_Id([NotNull] Predicate1Parser.Pexpr_IdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Pexpr_Id</c>
	/// labeled alternative in <see cref="Predicate1Parser.pexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPexpr_Id([NotNull] Predicate1Parser.Pexpr_IdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Pexpr_Bool</c>
	/// labeled alternative in <see cref="Predicate1Parser.pexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPexpr_Bool([NotNull] Predicate1Parser.Pexpr_BoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Pexpr_Bool</c>
	/// labeled alternative in <see cref="Predicate1Parser.pexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPexpr_Bool([NotNull] Predicate1Parser.Pexpr_BoolContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Pexpr_Brackets</c>
	/// labeled alternative in <see cref="Predicate1Parser.pexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPexpr_Brackets([NotNull] Predicate1Parser.Pexpr_BracketsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Pexpr_Brackets</c>
	/// labeled alternative in <see cref="Predicate1Parser.pexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPexpr_Brackets([NotNull] Predicate1Parser.Pexpr_BracketsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Expr_NegationOperation</c>
	/// labeled alternative in <see cref="Predicate1Parser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr_NegationOperation([NotNull] Predicate1Parser.Expr_NegationOperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Expr_NegationOperation</c>
	/// labeled alternative in <see cref="Predicate1Parser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr_NegationOperation([NotNull] Predicate1Parser.Expr_NegationOperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Expr_FunctionCall</c>
	/// labeled alternative in <see cref="Predicate1Parser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr_FunctionCall([NotNull] Predicate1Parser.Expr_FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Expr_FunctionCall</c>
	/// labeled alternative in <see cref="Predicate1Parser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr_FunctionCall([NotNull] Predicate1Parser.Expr_FunctionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Expr_PBinaryOperation</c>
	/// labeled alternative in <see cref="Predicate1Parser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr_PBinaryOperation([NotNull] Predicate1Parser.Expr_PBinaryOperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Expr_PBinaryOperation</c>
	/// labeled alternative in <see cref="Predicate1Parser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr_PBinaryOperation([NotNull] Predicate1Parser.Expr_PBinaryOperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Expr_Value</c>
	/// labeled alternative in <see cref="Predicate1Parser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr_Value([NotNull] Predicate1Parser.Expr_ValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Expr_Value</c>
	/// labeled alternative in <see cref="Predicate1Parser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr_Value([NotNull] Predicate1Parser.Expr_ValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Expr_BracketExpression</c>
	/// labeled alternative in <see cref="Predicate1Parser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr_BracketExpression([NotNull] Predicate1Parser.Expr_BracketExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Expr_BracketExpression</c>
	/// labeled alternative in <see cref="Predicate1Parser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr_BracketExpression([NotNull] Predicate1Parser.Expr_BracketExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Expr_PFunctionCall</c>
	/// labeled alternative in <see cref="Predicate1Parser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr_PFunctionCall([NotNull] Predicate1Parser.Expr_PFunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Expr_PFunctionCall</c>
	/// labeled alternative in <see cref="Predicate1Parser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr_PFunctionCall([NotNull] Predicate1Parser.Expr_PFunctionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Expr_BinaryOperation</c>
	/// labeled alternative in <see cref="Predicate1Parser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr_BinaryOperation([NotNull] Predicate1Parser.Expr_BinaryOperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Expr_BinaryOperation</c>
	/// labeled alternative in <see cref="Predicate1Parser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr_BinaryOperation([NotNull] Predicate1Parser.Expr_BinaryOperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Expr_UnaryOperation</c>
	/// labeled alternative in <see cref="Predicate1Parser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr_UnaryOperation([NotNull] Predicate1Parser.Expr_UnaryOperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Expr_UnaryOperation</c>
	/// labeled alternative in <see cref="Predicate1Parser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr_UnaryOperation([NotNull] Predicate1Parser.Expr_UnaryOperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>OperandConstant</c>
	/// labeled alternative in <see cref="Predicate1Parser.operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperandConstant([NotNull] Predicate1Parser.OperandConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OperandConstant</c>
	/// labeled alternative in <see cref="Predicate1Parser.operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperandConstant([NotNull] Predicate1Parser.OperandConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Variable</c>
	/// labeled alternative in <see cref="Predicate1Parser.operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] Predicate1Parser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Variable</c>
	/// labeled alternative in <see cref="Predicate1Parser.operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] Predicate1Parser.VariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Func_If</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_If([NotNull] Predicate1Parser.Func_IfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Func_If</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_If([NotNull] Predicate1Parser.Func_IfContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Func_Lower</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_Lower([NotNull] Predicate1Parser.Func_LowerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Func_Lower</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_Lower([NotNull] Predicate1Parser.Func_LowerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Func_Upper</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_Upper([NotNull] Predicate1Parser.Func_UpperContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Func_Upper</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_Upper([NotNull] Predicate1Parser.Func_UpperContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Func_Trim</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_Trim([NotNull] Predicate1Parser.Func_TrimContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Func_Trim</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_Trim([NotNull] Predicate1Parser.Func_TrimContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Func_Abs</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_Abs([NotNull] Predicate1Parser.Func_AbsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Func_Abs</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_Abs([NotNull] Predicate1Parser.Func_AbsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Func_Ceiling</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_Ceiling([NotNull] Predicate1Parser.Func_CeilingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Func_Ceiling</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_Ceiling([NotNull] Predicate1Parser.Func_CeilingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Func_Floor</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_Floor([NotNull] Predicate1Parser.Func_FloorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Func_Floor</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_Floor([NotNull] Predicate1Parser.Func_FloorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Func_Round</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_Round([NotNull] Predicate1Parser.Func_RoundContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Func_Round</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_Round([NotNull] Predicate1Parser.Func_RoundContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Func_Max</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_Max([NotNull] Predicate1Parser.Func_MaxContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Func_Max</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_Max([NotNull] Predicate1Parser.Func_MaxContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Func_Min</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_Min([NotNull] Predicate1Parser.Func_MinContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Func_Min</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_Min([NotNull] Predicate1Parser.Func_MinContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Func_Avg</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_Avg([NotNull] Predicate1Parser.Func_AvgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Func_Avg</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_Avg([NotNull] Predicate1Parser.Func_AvgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Func_Case</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_Case([NotNull] Predicate1Parser.Func_CaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Func_Case</c>
	/// labeled alternative in <see cref="Predicate1Parser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_Case([NotNull] Predicate1Parser.Func_CaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Pfunc_Begins</c>
	/// labeled alternative in <see cref="Predicate1Parser.pfunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPfunc_Begins([NotNull] Predicate1Parser.Pfunc_BeginsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Pfunc_Begins</c>
	/// labeled alternative in <see cref="Predicate1Parser.pfunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPfunc_Begins([NotNull] Predicate1Parser.Pfunc_BeginsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Pfunc_Contains</c>
	/// labeled alternative in <see cref="Predicate1Parser.pfunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPfunc_Contains([NotNull] Predicate1Parser.Pfunc_ContainsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Pfunc_Contains</c>
	/// labeled alternative in <see cref="Predicate1Parser.pfunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPfunc_Contains([NotNull] Predicate1Parser.Pfunc_ContainsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Pfunc_Ends</c>
	/// labeled alternative in <see cref="Predicate1Parser.pfunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPfunc_Ends([NotNull] Predicate1Parser.Pfunc_EndsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Pfunc_Ends</c>
	/// labeled alternative in <see cref="Predicate1Parser.pfunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPfunc_Ends([NotNull] Predicate1Parser.Pfunc_EndsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Pfunc_Isblank</c>
	/// labeled alternative in <see cref="Predicate1Parser.pfunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPfunc_Isblank([NotNull] Predicate1Parser.Pfunc_IsblankContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Pfunc_Isblank</c>
	/// labeled alternative in <see cref="Predicate1Parser.pfunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPfunc_Isblank([NotNull] Predicate1Parser.Pfunc_IsblankContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Pfunc_Isnumber</c>
	/// labeled alternative in <see cref="Predicate1Parser.pfunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPfunc_Isnumber([NotNull] Predicate1Parser.Pfunc_IsnumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Pfunc_Isnumber</c>
	/// labeled alternative in <see cref="Predicate1Parser.pfunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPfunc_Isnumber([NotNull] Predicate1Parser.Pfunc_IsnumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Number</c>
	/// labeled alternative in <see cref="Predicate1Parser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] Predicate1Parser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Number</c>
	/// labeled alternative in <see cref="Predicate1Parser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] Predicate1Parser.NumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Text</c>
	/// labeled alternative in <see cref="Predicate1Parser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterText([NotNull] Predicate1Parser.TextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Text</c>
	/// labeled alternative in <see cref="Predicate1Parser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitText([NotNull] Predicate1Parser.TextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Bool</c>
	/// labeled alternative in <see cref="Predicate1Parser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBool([NotNull] Predicate1Parser.BoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Bool</c>
	/// labeled alternative in <see cref="Predicate1Parser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBool([NotNull] Predicate1Parser.BoolContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace RuleEvaluator1.Parser
